@import "compass/utilities/color/contrast";

$button-gradient-style: simple;
$button-base-color: #4ba3cc !default;
$button-accent-color: false !default;

// @private, don't tinker with these variables...
$orig-button-gradient-style: $button-gradient-style;
$orig-button-base-color: $button-base-color;
$orig-button-accent-color: $button-accent-color;

$button-color1: $button-base-color;
$button-color2: $button-base-color;

// ====================================================================================================
//                                                                       | Primary Mixins (Impure)
// ====================================================================================================

@mixin button($style: $button-gradient-style, $base: $button-base-color, $accent: $button-accent-color) {
	$orig-button-gradient-style: $button-gradient-style !global;
	$orig-button-base-color: $button-base-color !global;
	$orig-button-accent-color: $button-accent-color !global;

	$button-gradient-style: $style !global;
	$button-base-color: $base !global;
	$button-accent-color: $accent !global;

	background-color: $base;

	$color-stops: if($style == flat or $style == inset, $base, button-color-stops($style, $base, $accent));
	$button-color1: first-color-stop($color-stops) !global;
	$button-color2: last-color-stop($color-stops) !global;

	@if length($color-stops) > 1 {
		@include button-border;
		@include button-shadow;
		@include background-image(linear-gradient($color-stops...));
	} @else if $style == inset {
		@include inset-button;
	}

	@content;

	$button-gradient-style: $orig-button-gradient-style !global;
	$button-base-color: $orig-button-base-color !global;
	$button-accent-color: $orig-button-accent-color !global;
}

@mixin button-states {
	&%hover, &:hover {
		@include button-hover;
		cursor: hand;
		cursor: pointer;
	}

	&%active, &:active {
		@include button-active;
	}
}

// ====================================================================================================
//                                                                       | Components
// ====================================================================================================

@mixin button-border($color: button-border-color()) {
	border: 1px solid $color;
}

@mixin button-shadow($color: button-shadow-color()) {
	@include box-shadow(inset 0 1px 0 $color, 0 1px 3px 1px rgba(#CCC, .3));
}

@mixin inset-button() {
	@include box-shadow(inset 0 -1px 1px rgba(white, .3), inset 0 1px 1px rgba(black, .5));
}

// ---------------------------------------------------------------------- Text Appearance (Pure)

@mixin button-text($color: white, $style: inset) {
	color: $color;
	$shadow-color: contrast-color($color, rgba(black, .8), rgba(white, .3));
	$shadow-offset: contrast-style($color, 1px, -1px);
	@if $style == inset {
		$shadow-offset: $shadow-offset * -1;
	}

	//@if $style == pillow {
	//	@include text-shadow(-2 (-2) 0 rgba(white, .3), 0 (-1) 0 rgba(black, .3), 0 1 0 rgba(black, .8), 0 2 0 rgba(white, .3));
	//} @else {
		@include text-shadow(0 $shadow-offset 0 $shadow-color);
	//}
}

// ---------------------------------------------------------------------- Button States

@mixin button-hover($style: $button-gradient-style, $base: darken($button-base-color, 5%), $accent: darken(if($button-accent-color, $button-accent-color, $button-base-color), 5%)) {
	background-color: $base;
	$color-stops: if($style == flat, $base, button-color-stops($style, $base, $accent));
	@include background-image(linear-gradient($color-stops));
}

@mixin button-active($style: $button-gradient-style, $base: $button-base-color, $accent: darken($button-color2, 8%)) {
	@if $style == flat {
		background-color: $base;
	} @else {
		@include box-shadow(inset 0 1px 2px $accent)
	}
}

// ====================================================================================================
//                                                                       | Helper Functions
// ====================================================================================================

@function button-border-color($color: $button-color2) {
	@return darken($color, 5%);
}

@function button-shadow-color($color: $button-color1) {
	@return lighten($color, 15%);
}

// ----------------------------------------------------------------------  Gradients (Pure)

@function button-color-stops-old($style, $base, $accent) {
	$color1: $base;
	$color2: if(not $accent, $base, $accent);

	$brightnessDivsor: if(lightness($base) > 75, 2, 1);

	@if $style == matte {
		@if not $accent or $base == $accent {
			$color1: lighten($base, 15%);
		}

		@return $color1, $color2 70%;
	} @else if $style == shiny {
		$color1: lighten($base, 25% / $brightnessDivsor);

		@if not $accent or $base == $accent {
			$color2: darken($base, 10%);
		}

		@return $color1, $base 50%, $color2;
	} @else if $style == glass {
		$color1: lighten($base, 8% / $brightnessDivsor);

		@return $color1 50%, $base 51%;
	} @else {
		@if not $accent or $base == $accent {
			$color2: darken($base, 10%);
		}

		@return $color1, $color2;
	}
}

@function button-color-stops($style, $base, $accent) {
	$color1: $base;
	$color2: if(not $accent, $base, $accent);

	$brightnessDivsor: if(lightness($base) > 75, 2, 1);

	@if $style == matte {
		@if not $accent or $base == $accent {
			$color2: darken($base, 15%);
		}

		@return $color1, $color2 70%;
	} @else if $style == shiny {
		$color1: lighten($base, 25% / $brightnessDivsor);

		@if not $accent or $base == $accent {
			$color2: darken($base, 10%);
		}

		@return $color1, $base 50%, $color2;
	} @else if $style == glass {
		$color2: darken($base, 8% / $brightnessDivsor);

		@return $color1 50%, $color2 51%;
	} @else {
		@if not $accent or $base == $accent {
			$color2: darken($base, 10%);
		}

		@return $color1, $color2;
	}
}

@function first-color-stop($colors) {
	@return nth(nth($colors, 1), 1);
}

@function last-color-stop($colors) {
	@return nth(nth($colors, length($colors)), 1);
}